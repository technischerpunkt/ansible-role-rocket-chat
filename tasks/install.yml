---
- name: Ensure {{ item }} dir exists
  file:
    path: "{{ item.path }}"
    state: directory
  with_items:
    - path: "{{ rocket_chat_data_dir }}/db"
    - path: "{{ rocket_chat_data_dir }}/dump"
    - path: "{{ rocket_chat_data_dir }}/uploads"
    - path: "{{ rocket_chat_data_dir }}/scripts"
  become: yes

- name: Install mongodb container
  docker_container:
    name: mongo
    image: "mongo:4.0"
    restart_policy: "unless-stopped"
    volumes:
      - "{{ rocket_chat_data_dir }}/db:/data/db"
      - "{{ rocket_chat_data_dir }}/dump:/dump"
    command: "mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1"
  become: yes

# this container's job is just run the command to initialize the replica set.
# it will run the command and remove himself (it will not stay running)
- name: Inititialize mongodb replica set
  docker_container:
    name: mongo-init-replica
    image: mongo:4.0
    restart_policy: "no"
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    links:
      - mongo:mongo
  become: yes

- name: Install rocket chat container
  docker_container:
    name: rocket_chat
    image: "rocketchat/rocket.chat:{{ rocket_chat_version }}"
    restart_policy: "unless-stopped"
    volumes:
      - "{{ rocket_chat_data_dir }}/uploads:/app/uploads"
    env:
      PORT: "3000"
      ROOT_URL: "https://{{ rocket_chat_fqdn }}"
      MONGO_URL: "mongodb://mongo:27017/rocketchat"
      MONGO_OPLOG_URL: "mongodb://mongo:27017/local"
      Accounts_UseDNSDomainCheck: "false"
      CREATE_TOKENS_FOR_USERS: "{{ rocket_chat_create_tokens }}"
    published_ports:
      - "{{ rocket_chat_private_ipv4 }}:3000:3000"
      - "{{ rocket_chat_private_ipv4 }}:{{ rocket_chat_exporter_port }}:{{ rocket_chat_exporter_port }}"
    links:
      - mongo:mongo
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
  become: yes
